openapi: 3.0.0
info:
  title: Travel Planner
  version: 1.0.0
  description: API for managing travel planning.

servers:
  - url: /api/v1
    description: Main API server

paths:
  /login:
    post:
      summary: User login
      description: Handles user login and issues JWT tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "yourpassword"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
  /signup:
    post:
      summary: User Signup
      description: Handles user registration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "yourpassword"
                firstname:
                  type: string
                  example: "Bob"
                lastname:
                  type: string
                  example: "Dylan"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created successfully"
        '400':
          description: Email address already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email address already exists"
        '500':
          description: Error in processing data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error Message Expected"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT